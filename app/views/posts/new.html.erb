<h3 class="font-bold mx-2.5">動画投稿</h3>

<%= form_with model: @post, local: true, id: 'post-form' do |form| %>
  <div class="form-group pl-2 py-4">
    <%= form.label :title, 'タイトル' %>
    <%= form.text_field :title, class: 'form-control border border-black p-2 w-3/4 sm:w-3/5', required: true %>
  </div>

  <div class="form-group pl-2 py-4">
    <%= form.label :description, '説明欄' %>
    <%= form.text_area :description, class: 'form-control border border-black p-2 w-3/4 sm:w-3/5', required: true %>
  </div>

  <p class="font-bold mx-2.5">YouTubeの動画URLと動画ファイルを同時に選択出来ません!</p>
  <p class="font-bold mx-2.5">両方入力している場合は投稿出来ません！！</p>

  <div class="pl-2 py-4">
    <%= form.label :video_url, "YouTubeの動画URL" %>
    <%= form.text_field :video_url, class: 'form-control border border-black p-2 w-3/4 sm:w-1/3' %>
    <small>例: https://www.youtube.com/watch?v=XXXXXX</small>
  </div>

  <div class="pl-2 py-4">
    <%= form.label :video_file, "動画ファイルをアップロード" %>
    <%= form.file_field :video_file, class: 'w-3/4 sm:w-auto' %>
  </div>

  <div class="pl-2 py-4">
    <%= form.select :predefined_tags, options_for_select([
      'PlayStation 3', 'PlayStation 4', 'PlayStation 5', 'Switch', 'Wii', '3DS', 'PC', 'その他'
    ]), {}, class: 'form-control border border-black p-2' %>
    <small>ジャンルを選択してください。</small>
  </div>

  <div class="pl-2 py-4">
    <%= form.label :tag_list, "タグ" %>
    <%= form.text_field :tag_list, value: @post.tags.map(&:name).join(", "), class: 'form-control border border-black p-2 w-3/4 sm:w-1/3' %>
    <small>タグはカンマで区切って入力してください。（例)Switch,3DS,PlayStation4,PlayStation5</small>
  </div>

  <div class="pl-2 py-4">
    <%= form.submit "投稿する", class: 'btn btn-primary mx-2.5', disabled: true, data: { action: "click->loading#show" } %>
  </div>
<% end %>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("post-form");
    const submitButton = form.querySelector("input[type='submit']");

    const titleField = document.getElementById("post_title");
    const descriptionField = document.getElementById("post_description");
    const videoUrlField = document.getElementById("post_video_url");
    const videoFileField = document.getElementById("post_video_file");

    const validateForm = () => {
      const title = titleField.value.trim();
      const description = descriptionField.value.trim();
      const videoUrl = videoUrlField.value.trim();
      const videoFileSelected = videoFileField.files.length > 0;

      const titleFilled = title.length > 0;
      const descriptionFilled = description.length > 0;
      const atLeastOneVideoSelected = videoUrl || videoFileSelected;

      if (titleFilled && descriptionFilled && atLeastOneVideoSelected) {
        submitButton.disabled = false;
      } else {
        submitButton.disabled = true;
      }
    };

    [titleField, descriptionField, videoUrlField].forEach(field => {
      field.addEventListener("input", validateForm);
    });
    videoFileField.addEventListener("change", validateForm);

    validateForm();
  });
</script>
