<h4 class="font-bold mx-2.5">スレッドを投稿する</h4>
  
<%= form_with model: @sureddo, local: true, id: "sureddo-form" do |form| %>
  <div class="form-group pl-2 py-4">
    <%= form.label :title, 'タイトル' %>
    <%= form.text_field :title, class: 'form-control border border-black p-2 w-3/4 sm:w-3/5', required: true, id: "sureddo_title" %>
  </div>

  <div class="form-group pl-2 py-4">
    <%= form.label :description, '説明欄' %>
    <%= form.text_area :description, class: 'form-control border border-black p-2 w-3/4 sm:w-3/5', required: true, id: "sureddo_description" %>
  </div>

  <div class="form-group pl-2 py-4">
    <%= form.label :image, '画像を添付できます！' %>
    <%= form.file_field :image %>
  </div>

  <div class="pl-2 py-4">
    <%= form.select :predefined_tags, options_for_select([
      'PlayStation 3', 'PlayStation 4', 'PlayStation 5', 'Switch', 'Wii', '3DS', 'PC', 'その他'
    ]), {}, class: 'form-control border border-black p-2' %>
    <small>ジャンルを選択してください。</small>
  </div>

  <div class="pl-2 py-4">
    <%= form.label :tag_list, "タグ" %>
    <%= form.text_field :tag_list, value: @sureddo.tags.map(&:name).join(", "), class: 'form-control border border-black p-2 w-3/4 sm:w-1/3' %>
    <small>タグはカンマで区切って入力してください。（例)Switch,3DS,PlayStation4,PlayStation5</small>
  </div>

  <div class="form-group pl-2 py-4">
    <%= form.submit "投稿する", class: 'btn btn-primary mx-2.5', disabled: true, data: { action: "click->loading#show" } %>
  </div>
<% end %>

<script>
  document.addEventListener("turbo:load", () => {
    const form = document.getElementById("sureddo-form");
    if (!form) return;

    const submitButton = form.querySelector("input[type='submit']");
    const titleField = document.getElementById("sureddo_title");
    const descriptionField = document.getElementById("sureddo_description");

    const validateForm = () => {
      const titleFilled = titleField.value.trim().length > 0;
      const descriptionFilled = descriptionField.value.trim().length > 0;

      submitButton.disabled = !(titleFilled && descriptionFilled);
    };

    [titleField, descriptionField].forEach(field => {
      field.addEventListener("input", validateForm);
    });

    validateForm();
  });
</script>
